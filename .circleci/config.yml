version: 2.1

jobs:
  build-and-deploy:
    working_directory: ~/cedar-groves-site

    docker:
      - image: circleci/node:latest

    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - checkout
      - setup_remote_docker

      - run:
          name: Install dependencies
          command: sudo npm install

      - run:
          name: Check npm version
          command: npm -v

      - run:
          name: Install AWS v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm awscliv2.zip

      - run:
          name: Check AWS version
          command: aws --version

      - run:
          name: Docker login
          command: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - run:
          name: Set up git config
          command: |
            git config --global user.email $GIT_USER_EMAIL
            git config --global user.name $GIT_USER_NAME

      - run:
          name: Install hub
          command: sudo apt install hub

      - run:
          name: Check hub version
          command: hub --version

      - run:
          name: Create release
          command: |
            npm version patch
            echo 'export RELEASE_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)' >> $BASH_ENV && source $BASH_ENV
            echo "$GITHUB_TOKEN" | hub release create -d -m "Release $RELEASE_TAG" -t $RELEASE_TAG -c "$(git rev-parse HEAD)"

      - run:
          name: Build
          command: |
            docker build -t $DOCKER_CONTAINER_NAME:$RELEASE_TAG .
            docker tag $DOCKER_CONTAINER_NAME:$RELEASE_TAG $ECR/$DOCKER_CONTAINER_NAME:$RELEASE_TAG
            docker push $ECR/$DOCKER_CONTAINER_NAME:$RELEASE_TAG
            docker tag $DOCKER_CONTAINER_NAME:$RELEASE_TAG $ECR/$DOCKER_CONTAINER_NAME:latest
            docker push $ECR/$DOCKER_CONTAINER_NAME:latest

      - deploy:
          name: Deploy
          command: |
            ssh $EC2_INSTANCE_USERNAME@$EC2_INSTANCE_IP_ADDRESS "docker pull $ECR/$DOCKER_CONTAINER_NAME:latest && docker stop $DOCKER_CONTAINER_NAME && docker rm $DOCKER_CONTAINER_NAME && docker run -d -p $DOCKER_HOST_PORT:$PORT --name $DOCKER_CONTAINER_NAME $ECR/$DOCKER_CONTAINER_NAME:latest"

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build-and-deploy:
          filters:
            branches:
              only: main
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
