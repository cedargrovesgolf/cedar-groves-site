# Use the latest version of the CircleCI pipeline configuration syntax
version: 2.1

# Define the jobs that will run in the pipeline
jobs:
  build:
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_REGION: $AWS_REGION
      ECR_REPOSITORY: $ECR_REPOSITORY
      TAG: $CIRCLE_SHA1
    docker:
      - image: circleci/node:14.16
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Log in to ECR
          command: $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - run:
          name: Build Docker image
          command: docker build -t $ECR_REPOSITORY:$TAG .
      - run:
          name: Push Docker image to ECR
          command: docker push $ECR_REPOSITORY:$TAG

  deploy:
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_REGION: $AWS_REGION
      ECR_REPOSITORY: $ECR_REPOSITORY
      TAG: $CIRCLE_SHA1
      DOCKER_HOST_PORT: $DOCKER_HOST_PORT
      HOST: $HOST
      PORT: $PORT
    docker:
      - image: circleci/node:14.16
    steps:
      - run:
          name: Deploy Docker image
          command: |
            ssh -i ~/.ssh/webadmin.pem $EC2_INSTANCE_USERNAME@$EC2_INSTANCE_IP_ADDRESS "sudo docker stop $DOCKER_CONTAINER_NAME && sudo docker rm $DOCKER_CONTAINER_NAME && sudo docker pull $ECR_REPOSITORY:$TAG && sudo docker run -d --restart=always --name $DOCKER_CONTAINER_NAME -p $DOCKER_HOST_PORT:$PORT -e HOST=$HOST -e PORT=$PORT $ECR_REPOSITORY:$TAG"

  setup-remote-docker:
    docker:
      - image: circleci/node:14.16
    steps:
      - setup_remote_docker:
          version: 20.10.8-ce
          docker_layer_caching: true
      - run:
          name: Set working directory
          command: cd /app

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - setup-remote-docker
      - build:
          requires:
            - setup-remote-docker
      - deploy:
          requires:
            - build
    filters:
      branches:
        only: main
