version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:lts
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Install AWS v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm awscliv2.zip
      - run:
          name: Check AWS version
          command: aws --version
      - run:
          name: Docker Login
          command: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR

      - run:
          name: Generate version tag
          command: |
            VERSION=$(node -p -e "require('./package.json').version")
            echo "export VERSION=$(node -p -e "require('./package.json').version")" >> $BASH_ENV
      - run:
          name: Build
          command: npm run build

  deploy:
    docker:
      - image: circleci/node:lts
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Install AWS v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm awscliv2.zip
      - run:
          name: Check AWS version
          command: aws --version
      - run:
          name: Docker Login
          command: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR

      - run:
          name: Deploy
          command: npm run deploy
  release:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run:
          name: Install Go
          command: |
            curl -O https://dl.google.com/go/go1.17.6.linux-amd64.tar.gz
            tar -xvf go1.17.6.linux-amd64.tar.gz
            sudo chown -R root:root ./go
            sudo mv go /usr/local
            echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
            source $BASH_ENV
            sudo rm -rf go1.17.6.linux-amd64.tar.gz
            sudo apt-get autoremove -y
            sudo apt-get autoclean -y
      - run:
          name: Install GitHub release notes
          command: |
            go install github.com/aktau/github-release@latest
            echo 'export PATH=$PATH:$HOME/go/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Release
          command: npm run release


workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build
      - release:
          requires:
            - build

workspace:
  create:
    name: build-workspace
    paths:
      - ./node_modules
  persist_to_workspace:
    root: .
    paths:
      - .
