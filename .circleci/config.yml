version: 2.1

jobs:
  build-and-deploy:
    working_directory: ~/cedar-groves-site
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Install AWS v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm awscliv2.zip
      - run:
          name: Check AWS version
          command: aws --version

      - run:
          name: Docker Login
          command: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build
          command: npm run build
      - deploy:
          name: Deploy
          command: |
            ssh-keyscan $EC2_INSTANCE_IP_ADDRESS >> ~/.ssh/known_hosts
            ssh $EC2_INSTANCE_USERNAME@$EC2_INSTANCE_IP_ADDRESS "\
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR && \
            docker pull $ECR/$DOCKER_CONTAINER_NAME:latest && \
            if docker ps -a | grep $DOCKER_CONTAINER_NAME; then \
              docker stop $DOCKER_CONTAINER_NAME && \
              docker rm $DOCKER_CONTAINER_NAME; \
            fi && \
            docker run -d -p $PORT:$PORT --name $DOCKER_CONTAINER_NAME $ECR/$DOCKER_CONTAINER_NAME:latest"

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build-and-deploy:
          filters:
            branches:
              only: main
